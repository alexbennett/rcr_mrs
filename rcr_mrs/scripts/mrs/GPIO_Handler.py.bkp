import RPi.GPIO as GPIO

class GPIO_Handler:
    def __init__(self):
        #Set Pin numbering standard
        GPIO.setmode(GPIO.BCM)

        #Define GPIO Pin variables
        self.limit_switches = (2,3,4,17)
        self.start_MRS = 26
        self.shutdown_MRS = 6
        self.fire_RRS = 13
        self.breakaway_delay = 5

        #limit switches are 2,3,4,17
        GPIO.setup(self.limit_switches[0],  GPIO.IN) #,  pull_up_down=GPIO.PUD_UP)
        GPIO.setup(self.limit_switches[1],  GPIO.IN) #,  pull_up_down=GPIO.PUD_UP)
        GPIO.setup(self.limit_switches[2],  GPIO.IN) #,  pull_up_down=GPIO.PUD_UP)
        GPIO.setup(self.limit_switches[3],  GPIO.IN) #,  pull_up_down=GPIO.PUD_UP)
        GPIO.setup(self.start_MRS,       GPIO.IN,  pull_up_down=GPIO.PUD_UP)
        GPIO.setup(self.shutdown_MRS,    GPIO.IN,  pull_up_down=GPIO.PUD_UP)
        GPIO.setup(self.fire_RRS,        GPIO.OUT)
        GPIO.setup(self.breakaway_delay, GPIO.OUT)

    def get_ls_state(self, switch_number):
        switch_number = switch_number - 1
        return GPIO.input(self.limit_switches[switch_number])

    def get_Start_MRS_state(self):
        return GPIO.input(self.start_MRS)

    def get_Shutdown_MRS_state(self):
        return GPIO.input(self.shutdown_MRS)

    def fire_RRS(self):
        GPIO.output(self.fire_RRS, GPIO.LOW)

    def breakaway_complete(self):
        GPIO.output(self.breakaway_delay, GPIO.LOW)

    def arms_locked(self):
        if self.get_ls_state(2): #or self.get_ls_state(2) or self.get_ls_state(3) or self.get_ls_state(4):
            return True
        else:
            return False



